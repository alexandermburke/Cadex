// /components/Plans.js
'use client';

import { Poppins } from 'next/font/google';
import React, { useState } from 'react';
import Button from './Button';
import { useAuth } from '@/context/AuthContext';
import { doc, setDoc } from 'firebase/firestore';
import { db } from '@/firebase';
import { useRouter } from 'next/navigation';
import { FaInfoCircle } from 'react-icons/fa'; 
import { BsStars } from "react-icons/bs";

const poppins = Poppins({
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
});

const plans = [
  {
    name: 'Basic',
    description: 'Designed for individual legal study and practice.',
    price: 15,
    interval: 'Per month',
    promotion: 'First 7 days free',
    features: [
      {
        text: 'Comprehensive access to case simulation tools',
        info: 'Simulate real-life legal cases to enhance your practical understanding.',
      },
      {
        text: 'Infinite question explanations powered by advanced AI',
        info: 'Receive detailed explanations for an unlimited number of practice questions.',
      },
      {
        text: 'Access to streamlined Practive exam preparation resources',
        info: 'Utilize resources specifically tailored to help you excel in exams.',
      },
      {
        text: 'Ad-free user experience',
      },
      {
        text: 'Cancel at any time, no questions asked',
      },
    ],
    recommended: false,
  },
  {
    name: 'Pro',
    description: 'Optimized for law students seeking advanced study tools.',
    price: 50, 
    interval: 'Per month',
    features: [
      {
        text: 'Includes all features from the Basic plan',
      },
      {
        text: 'Full access to Pro+ Mode Exam Prep',
        info: 'Advanced exam preparation mode with enhanced features for better performance.',
      },
      {
        text: 'Exclusive access to AI generated Exam Insights',
        info: 'Get personalized insights and analytics generated by our AI system.',
      },
      {
        text: 'Comprehensive suite of professional legal resources',
        info: 'Access a wide range of resources to support your legal studies and practice.',
      },
      {
        text: 'Priority customer support and expedited feature requests',
        info: 'Receive faster responses from our support team and have your feature requests prioritized.',
      },
    ],
    recommended: true,
  },
  {
    name: 'Expert',
    description: 'For 2L & 3L law students seeking the highest level of tools and support.',
    price: 70,
    interval: 'Per month',
    features: [
      {
        text: 'Includes all features from the Pro plan',
      },
      {
        text: 'Upgraded to LExAPI 4.0',
        info: 'Enhanced AI capabilities using the latest LExAPI 4.0 for more accurate and insightful responses.',
      },
      {
        text: 'Advanced analytics and reporting tools',
        info: 'Utilize sophisticated tools for in-depth analysis and reporting of your study patterns and progress.',
      },
      {
        text: 'Access to exclusive study groups and forums',
        info: 'Join specialized groups and forums tailored for advanced law students to collaborate and discuss complex legal topics.',
      },
      {
        text: 'Personalized mentorship sessions with AI',
        info: 'Schedule one-on-one mentorship sessions with experienced legal professionals to guide your studies and career.',
      },
    ],
    recommended: false,
  },
];

export default function Plans() {

  const [selectedPlan, setSelectedPlan] = useState(null);
  const { currentUser, userDataObj } = useAuth();
  const router = useRouter();
  const currentPlan = userDataObj?.billing?.plan;
  const isDarkMode = userDataObj?.darkMode || false;
  const [billingCycle, setBillingCycle] = useState('monthly'); 
  const [holidaySale, setHolidaySale] = useState(false); // Toggle for holiday sale

  let filteredPlans = plans;
  if (currentPlan === 'Basic') {
    filteredPlans = plans.filter((plan) => plan.name !== 'Basic');
  } else if (currentPlan === 'Pro') {
    filteredPlans = plans.filter((plan) => plan.name === 'Expert');
  } else if (currentPlan === 'Expert') {
    filteredPlans = [];
  }

  function formatPrice(price) {
    let finalPrice = price;
    let originalPrice = price;

    if (billingCycle === 'yearly') {
      finalPrice = price * 12 * 0.9; 
      originalPrice = price * 12;
    }

    if (holidaySale) {
      const discountedPrice = finalPrice / 2;
      return (
        <>
          <span className="line-through text-red-500">${originalPrice.toFixed(2)}</span> /{' '}
          <span className="font-bold text-green-500">${discountedPrice.toFixed(2)}</span>
        </>
      );
    }

    return `$${finalPrice.toFixed(2)}`;
  }

  async function handleUpdatePlan() {
    if (!selectedPlan) return;

    const billing = { plan: selectedPlan };
    const userRef = doc(db, 'users', currentUser.uid);

    // Save billing info to Firestore
    await setDoc(userRef, { billing }, { merge: true });

    // Send to checkout for selected plan
    const options = {
      method: 'POST',
      headers: {
        'Content-type': 'application/json',
      },
      body: JSON.stringify({
        customerId: userDataObj?.billing?.stripeCustomerId,
        userId: currentUser.uid,
        email: currentUser.email,
        plan: selectedPlan,
        billingCycle,
      }),
    };

    const response = await fetch('/api/checkout', options);
    const data = await response.json();
    router.push(data.url);
  }

  return (
    <div
      className={`flex flex-col w-full gap-8 ${
        isDarkMode ? 'bg-slate-900 text-white' : 'bg-transparent text-gray-800'
      } min-h-screen p-4 sm:p-8 transition-colors duration-300`}
    >
      {/* Holiday Sale Banner */}
      {holidaySale && (
        <section
          className={`w-full max-h-10 p-4 sm:p-6 rounded-lg flex items-center justify-center transition-colors duration-300 mx-auto goldBackgroundAlt text-white`}
        >
          <div className="flex items-center gap-2">
            <BsStars className="text-lg" />
            <span className="font-semibold">Holiday Sale: 50% Off Forever</span>
          </div>
        </section>
      )}

      {/* Hero Section */}
      <section className="w-full flex flex-col items-center text-center">
        <h2
          className={`text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-semibold mb-4 ${
            isDarkMode ? 'text-white' : 'text-blue-950'
          } ${poppins.className}`}
        >
          Find the <span className="bg-gradient-to-r from-yellow-400 via-red-500 to-pink-500 bg-clip-text text-transparent">plan</span> for you
        </h2>
        <p className={`text-lg sm:text-xl md:text-2xl max-w-2xl ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>
          Choose a plan that best fits your legal study and practice needs. Upgrade anytime to access more features!
        </p>
      </section>

      {/* Billing Cycle Toggle */}
      <section className="flex items-center justify-center gap-4 my-10">
        <span className={`font-semibold ${poppins.className}`}>Monthly Billing</span>
        <div className="relative inline-block w-14 h-8 select-none transition duration-200 ease-in">
          <input
            type="checkbox"
            name="billingCycleToggle"
            id="billingCycleToggle"
            checked={billingCycle === 'yearly'}
            onChange={() => setBillingCycle(billingCycle === 'monthly' ? 'yearly' : 'monthly')}
            className="toggle-checkbox absolute h-0 w-0 opacity-0"
          />
          <label
            htmlFor="billingCycleToggle"
            className={`toggle-label block overflow-hidden h-8 rounded-full cursor-pointer transition-colors duration-200 ${
              isDarkMode ? 'bg-gray-600' : 'bg-gray-300'
            }`}
          ></label>
        </div>
        <span className={`font-semibold ${poppins.className}`}>Yearly Billing</span>
      </section>

      {/* Plans Grid */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 place-items-center w-full max-w-6xl mx-auto">
        {filteredPlans.map((plan, planIndex) => (
          <div
            key={planIndex}
            onClick={() => setSelectedPlan(plan.name)}
            className={`relative p-6 sm:p-8 border border-solid rounded-2xl shadow-lg transition-transform duration-300 hover:scale-105 cursor-pointer max-w-sm ${
              selectedPlan === plan.name
                ? 'border-blue-500 bg-gradient-to-r from-blue-100 to-blue-50'
                : isDarkMode
                ? 'border-gray-700 bg-slate-800'
                : 'border-white bg-white'
            }`}
          >
            {/* Promotion Badge for Basic Plan */}
            {plan.promotion && (
              <div className="absolute top-0 left-0 transform -translate-y-1/2 px-4 py-1 goldBackgroundAlt text-gray-800 text-sm font-semibold rounded-full shadow-md">
                {plan.promotion}
              </div>
            )}

            {/* Plan Header */}
            <div className="flex items-center justify-between mb-4">
              <h3
                className={`text-2xl sm:text-3xl font-bold ${
                  plan.recommended
                    ? 'text-gradient bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 bg-clip-text text-transparent'
                    : isDarkMode
                    ? 'text-white'
                    : 'text-blue-950'
                } ${poppins.className}`}
              >
                {plan.name}
              </h3>
              {plan.recommended && (
                <span className="px-3 py-1 bg-emerald-500 text-white text-xs font-semibold rounded-full">
                  Recommended
                </span>
              )}
            </div>

            {/* Plan Price and Interval */}
            <div className="flex flex-col items-start mb-4">
              <p className={`text-3xl sm:text-4xl font-semibold ${poppins.className}`}>
                {formatPrice(plan.price)}
              </p>
              <p className="text-sm text-gray-600">{billingCycle === 'monthly' ? 'Per month' : 'Per year'}</p>
            </div>

            <hr className="border-gray-300 mb-4" />

            {/* Plan Description */}
            <p className={`text-md sm:text-lg font-medium mb-4 ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>
              {plan.description}
            </p>

            {/* Plan Features */}
            <ul className="flex flex-col gap-2 mb-4 relative">
              {plan.features.map((feature, featureIndex) => (
                <li
                  key={featureIndex}
                  className="flex items-start gap-2 group"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    className="h-5 w-5 text-green-500 flex-shrink-0 mt-1"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                  <span className={`flex-1 ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>
                    {feature.text}
                  </span>
                  {feature.info && (
                    <div className="relative flex-shrink-0">
                      <FaInfoCircle className="text-gray-400 hover:text-gray-600 cursor-pointer" />
                      {/* Tooltip */}
                      <div className="absolute -top-12 left-1/2 transform -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-300 bg-gray-700 text-white text-xs rounded py-1 px-2 w-48 z-50">
                        {feature.info}
                      </div>
                    </div>
                  )}
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>

      {/* Get Plan Button */}
      {selectedPlan && (
        <div className="flex flex-col items-center w-full max-w-md mx-auto">
          <Button
            text={`Get ${selectedPlan}`}
            clickHandler={handleUpdatePlan}
            additionalClasses="w-full sm:w-56 h-12 text-lg"
          />
        </div>
      )}

      {/* Features Section */}
      <section className="w-full p-6 rounded-lg transition-colors duration-300 flex flex-col items-center gap-4 my-12">
        <h2 className={`text-4xl font-bold ${isDarkMode ? 'text-white' : 'text-blue-950'} ${poppins.className}`}>
          Features
        </h2>
        <div className="w-full max-w-4xl overflow-x-auto">
          <table className={`min-w-full table-auto border-collapse ${isDarkMode ? 'bg-slate-800' : 'bg-transparent'}`}>
            <thead>
              <tr>
                <th className="px-4 py-2 text-left text-xl font-semibold text-blue-500">Feature</th>
                <th className="px-4 py-2 text-left text-xl font-semibold text-blue-500">Description</th>
              </tr>
            </thead>
            <tbody>
              <tr className="border-t">
                <td className="px-4 py-2 flex items-center gap-2">
                  <FaInfoCircle className="text-blue-500" />
                  <span className="font-semibold">Comprehensive Study Tools</span>
                </td>
                <td className={`px-4 py-2 ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>
                  Access a wide range of tools designed to enhance your legal studies and practice.
                </td>
              </tr>
              <tr className="border-t">
                <td className="px-4 py-2 flex items-center gap-2">
                  <FaInfoCircle className="text-blue-500" />
                  <span className="font-semibold">Personalized Insights</span>
                </td>
                <td className={`px-4 py-2 ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>
                  Receive tailored insights and analytics to track your progress and identify areas for improvement.
                </td>
              </tr>
              <tr className="border-t">
                <td className="px-4 py-2 flex items-center gap-2">
                  <FaInfoCircle className="text-blue-500" />
                  <span className="font-semibold">Expert Support</span>
                </td>
                <td className={`px-4 py-2 ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>
                  Get priority support and access to legal experts to assist you with any questions or issues.
                </td>
              </tr>
              <tr className="border-t">
                <td className="px-4 py-2 flex items-center gap-2">
                  <FaInfoCircle className="text-blue-500" />
                  <span className="font-semibold">Secure and Reliable</span>
                </td>
                <td className={`px-4 py-2 ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>
                  Your data is protected with industry-standard security measures, ensuring reliability and peace of mind.
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="w-full p-6 rounded-lg transition-colors duration-300 flex flex-col items-center gap-4">
        <h2 className={`text-3xl font-bold ${poppins.className} ${isDarkMode ? 'text-white' : 'text-blue-950'}`}>
          Frequently Asked Questions
        </h2>
        <div className="max-w-4xl w-full space-y-4">
          <div className="flex flex-col gap-2">
            <h3 className="text-xl font-semibold">How do I upgrade my plan?</h3>
            <p className={`text-gray-600 ${isDarkMode ? 'text-gray-300' : ''}`}>
              To upgrade your plan, select the desired plan from the available options and click the &quot;Get {selectedPlan}&quot; button. Follow the prompts to complete the billing process.
            </p>
          </div>
          <div className="flex flex-col gap-2">
            <h3 className="text-xl font-semibold">Can I switch between monthly and yearly billing?</h3>
            <p className={`text-gray-600 ${isDarkMode ? 'text-gray-300' : ''}`}>
              Yes, you can toggle between monthly and yearly billing using the switch above the plans. Selecting yearly billing may offer discounted rates.
            </p>
          </div>
          <div className="flex flex-col gap-2">
            <h3 className="text-xl font-semibold">What is included in the Pro plan?</h3>
            <p className={`text-gray-600 ${isDarkMode ? 'text-gray-300' : ''}`}>
              The Pro plan includes all features from the Basic plan, along with additional advanced tools, exclusive access to AI-generated insights, and priority customer support.
            </p>
          </div>
          <div className="flex flex-col gap-2">
            <h3 className="text-xl font-semibold">Is there a free trial available?</h3>
            <p className={`text-gray-600 ${isDarkMode ? 'text-gray-300' : ''}`}>
              Yes, the Basic plan offers a 7-day free trial for new users. You can cancel at any time during the trial period without any charges.
            </p>
          </div>
          <div className="flex flex-col gap-2">
            <h3 className="text-xl font-semibold">How do I cancel my subscription?</h3>
            <p className={`text-gray-600 ${isDarkMode ? 'text-gray-300' : ''}`}>
              To cancel your subscription, navigate to the Billing &amp; Plan section and click on the &quot;Cancel Subscription&quot; button. Follow the instructions to complete the cancellation process.
            </p>
          </div>
        </div>
      </section>

      {/* Message when no plans are available */}
      {filteredPlans.length === 0 && (
        <div className="flex flex-col items-center mt-8">
          <p className="text-xl font-semibold text-gray-700">
            You are already on the highest plan.
          </p>
        </div>
      )}

      {/* Footer Section with Stripe Logo */}
      <div className="flex flex-col items-center gap-2 mt-8">
        <div className="flex items-center justify-center gap-2">
          <p
            className={`text-center ${isDarkMode ? 'text-gray-300' : 'text-gray-700'} ${poppins.className}`}
          >
            All transactions are handled by Stripe
          </p>
        </div>
      </div>
    </div>
  );
}
