// /app/api/submit-exam-answer/route.js

import { NextResponse } from 'next/server';
import { Configuration, OpenAIApi } from 'openai';

export async function POST(request) {
  try {
    const { question, answer } = await request.json();

    if (!question || !answer) {
      return NextResponse.json({ error: 'Question and answer are required.' }, { status: 400 });
    }

    // Set up OpenAI API
    const configuration = new Configuration({
      apiKey: process.env.OPENAI_API_KEY,
    });
    const openai = new OpenAIApi(configuration);

    // Define the prompt
    const prompt = `You are an expert grader for the exam. Evaluate the following answer to the question provided. Give detailed feedback on the correctness, legal reasoning, and areas for improvement. Provide the correct answer after the feedback.

Question:
"""
${question}
"""

User's Answer:
"""
${answer}
"""

Please provide your feedback in a clear and professional manner.`;

    const response = await openai.createChatCompletion({
      model: 'gpt-3.5-turbo',
      messages: [{ role: 'user', content: prompt }],
      max_tokens: 1000,
      temperature: 0.7,
    });

    const feedback = response.data.choices[0].message.content.trim();

    if (!feedback) {
      throw new Error('No feedback generated by the AI.');
    }

    return NextResponse.json({ feedback }, { status: 200 });
  } catch (error) {
    console.error('Error during OpenAI API call:', error.response?.data || error.message);
    return NextResponse.json(
      {
        error: 'Failed to evaluate answer',
        details: error.response?.data || error.message,
      },
      { status: 500 }
    );
  }
}
