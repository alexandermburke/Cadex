// /app/api/get-exam-question/route.js

import { NextResponse } from 'next/server';
import { Configuration, OpenAIApi } from 'openai';

export async function POST(request) {
  try {
    const { examType, difficulty, lawType } = await request.json();

    if (!examType || !difficulty || !lawType) {
      return NextResponse.json({ error: 'Incomplete exam configuration.' }, { status: 400 });
    }

    // Set up OpenAI API
    const configuration = new Configuration({
      apiKey: process.env.OPENAI_API_KEY,
    });
    const openai = new OpenAIApi(configuration);

    // Define the prompt
    const prompt = `As an expert in ${lawType}, create a ${difficulty} level question suitable for the ${examType}. The question should focus on ${lawType} topics and adhere to the style of the ${examType}. Do not include the answer in your response.

Provide the question in plain text without any additional formatting.`;

    const response = await openai.createChatCompletion({
      model: 'gpt-3.5-turbo',
      messages: [{ role: 'user', content: prompt }],
      max_tokens: 500,
      temperature: 0.7,
    });

    const question = response.data.choices[0].message.content.trim();

    if (!question) {
      throw new Error('No question generated by the AI.');
    }

    return NextResponse.json({ question }, { status: 200 });
  } catch (error) {
    console.error('Error during OpenAI API call:', error.response?.data || error.message);
    return NextResponse.json(
      {
        error: 'Failed to generate exam question',
        details: error.response?.data || error.message,
      },
      { status: 500 }
    );
  }
}
